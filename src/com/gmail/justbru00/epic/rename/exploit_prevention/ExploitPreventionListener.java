package com.gmail.justbru00.epic.rename.exploit_prevention;

import com.gmail.justbru00.epic.rename.utils.v3.GlowingUtil;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.HumanEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.inventory.InventoryType;
import org.bukkit.inventory.ItemStack;

import com.gmail.justbru00.epic.rename.main.v3.Main;
import com.gmail.justbru00.epic.rename.utils.v3.Debug;
import com.gmail.justbru00.epic.rename.utils.v3.Messager;

public class ExploitPreventionListener implements Listener {

	private boolean grindstoneVersion = true;
	private boolean grindstoneVersionSet = false;

	/**
	 * Checks if this version has the grindstone. MC 1.14 or greater
	 * @return True if this version has the grindstone. False if not.
	 */
	public boolean isMCVersionWithGrindstone() {
		if (grindstoneVersionSet) {
			return grindstoneVersion;
		}

		String version = Bukkit.getVersion();

		if (version.contains("1.7") || version.contains("1.8") || version.contains("1.9") 
				|| version.contains("1.10") || version.contains("1.11") || version.contains("1.12") || version.contains("1.13")) {
			grindstoneVersionSet = true;
			grindstoneVersion = false;
		} else {
			grindstoneVersionSet = true;
			grindstoneVersion = true;
		}

		return grindstoneVersion;
	}	
	
	/**
	 * ISSUE #114
	 */
	@EventHandler(priority=EventPriority.HIGHEST)
	public void onInventoryClick(InventoryClickEvent e) {	
		// Applies to MC 1.14 or higher
		if (isMCVersionWithGrindstone()) {			
			if (Main.getBooleanFromConfig("disable_grindstone_for_glowing_items")) {
                if (e.getInventory().getType() == InventoryType.ANVIL) {
					for (ItemStack is : e.getInventory().getStorageContents()) {
						if (is != null) {
							if (GlowingUtil.isGlowingItem(is)) {
								// Glowing item with anvil
								e.setCancelled(true);
								final HumanEntity eventPlayer = e.getWhoClicked();
								Bukkit.getScheduler().scheduleSyncDelayedTask(Main.getInstance(), new Runnable() {										
									@Override
									public void run() {		
										Debug.send("[ExploitPreventionListener] Anvil inventory scan detected glowing. Cancelled InventoryClickEvent");
										Messager.msgSenderWithConfigMsg("exploit_prevention.no_anvil_with_glowing_items", eventPlayer);
									}
								}, 1);
							}
						}
					}
				}

				if (e.getInventory().getType() == InventoryType.GRINDSTONE) {
					for (ItemStack is : e.getInventory().getStorageContents()) {
						if (is != null) {
							if (GlowingUtil.isGlowingItem(is)) {
								// Glowing Item
								e.setCancelled(true);
								final HumanEntity eventPlayer = e.getWhoClicked();
								Bukkit.getScheduler().scheduleSyncDelayedTask(Main.getInstance(), new Runnable() {										
									@Override
									public void run() {		
										Debug.send("[ExploitPreventionListener] Grindstone inventory scan detected glowing. Cancelled InventoryClickEvent");
										Messager.msgSenderWithConfigMsg("exploit_prevention.no_grindstone_with_glowing_items", eventPlayer);
									}
								}, 1);
							}
						} 						
					}

					if (e.getCurrentItem() == null || e.getCurrentItem().getType().equals(Material.AIR)) {
						return;
					}

					if (GlowingUtil.isGlowingItem(e.getCurrentItem())) {
						// Glowing Item
						e.setCancelled(true);
						final HumanEntity eventPlayer = e.getWhoClicked();
						Bukkit.getScheduler().scheduleSyncDelayedTask(Main.getInstance(), new Runnable() {										
							@Override
							public void run() {		
								Debug.send("[ExploitPreventionListener] Item has glowing. Cancelled InventoryClickEvent");
								Messager.msgSenderWithConfigMsg("exploit_prevention.no_grindstone_with_glowing_items", eventPlayer);
							}
						}, 1);
					}
				}
			}
		}
	}
}
